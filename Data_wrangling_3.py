# %%
import numpy as np
import pandas as pd

# %%
df_nba=pd.read_csv("nba.csv")
df_iris=pd.read_csv("Iris.csv")

# %%
df_nba.head()

# %%
df_iris.head()

# %%
df_nba.isnull().sum()

# %%
df_nba.dtypes

# %%
df_nba.replace('?',0,inplace=True)

# %%
df_nba[['Number','Age','Weight','Salary']]=df_nba[['Number','Age','Weight','Salary']].fillna(df_nba[['Number','Age','Weight','Salary']].mean())

# %%
df_nba.isnull().sum()

# %%
df_nba.describe()

# %%
df_nba.mean(numeric_only=True)

# %%
df_nba.std(numeric_only=True)

# %%
df_nba.median(numeric_only=True)

# %%
df_nba.mode().loc[0]

# %%
df_nba.mode().iloc[0]

# %%
bins=[15,20,25,30,35,40,45]
labels=['15-19','20-24','25-29','30-34','35-39','40-44']
df_nba['Age Group']=pd.cut(df_nba['Age'],bins=bins,labels=labels,include_lowest=True,right=False)
df_nba.head()

# %%
result=df_nba[['Age Group','Salary']].groupby('Age Group').agg({'Salary':['min','max','median','skew']})
print(result)

# %%
df_nba['Age Group'].value_counts()

# %%
df_iris.head()

# %%
temp=df_iris[df_iris['Species']=='Iris-setosa']
temp.describe()

# %%
temp=df_iris[df_iris['Species']=='Iris-virginica']
temp.describe()

# %%
temp=df_iris[df_iris['Species']=='Iris-versicolor']
temp.describe()


*****************************************************************************************************

# -*- coding: utf-8 -*-
"""Assignment 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X4_wm9kvU8MJ2TAd-Iqf_0j-un5Yekv8
"""

import numpy as np
import pandas as pd

df=pd.read_csv("https://gist.githubusercontent.com/playgrdstar/bd409ebccfbce811eb879cc180763f37/raw/08db35b71e2cabc2ea353969da0204197851f778/iris_dirty.csv")
df

df.describe()

df.drop(['Unnamed: 0'],axis=1)
df

df = df.iloc[:, 1:]
df

df.isnull().sum()

df["Sepal.Length"].fillna(df["Sepal.Length"].mean(),inplace=True)

df

df.isnull().sum()

df.describe()

df.median()

df['Species'].unique()

df['Species']=df['Species'].apply(str.lower)
df

df['Species'].unique()

df.groupby('Species').agg({'Sepal.Length':'mean','Sepal.Width':'mean','Petal.Length':'mean','Petal.Width':'mean'})

df.groupby('Species').agg({'Sepal.Length':'median','Sepal.Width':'median','Petal.Length':'median','Petal.Width':'median'})

df.groupby('Species').agg({'Sepal.Length':'std','Sepal.Width':'std','Petal.Length':'std','Petal.Width':'std'})

df.groupby('Species').agg({'Sepal.Length':'max','Sepal.Width':'max','Petal.Length':'max','Petal.Width':'max'})

df.groupby('Species').agg({'Sepal.Length':'min','Sepal.Width':'min','Petal.Length':'min','Petal.Width':'min'})

# Define the list of columns you want to aggregate
columns_to_aggregate = ['Sepal.Length', 'Sepal.Width', 'Petal.Length', 'Petal.Width']

# Group by 'Species' column and compute the median for all columns in the list
result = df.groupby('Species')[columns_to_aggregate].median()
